FROM debian:buster-slim

ENV SC_PLATFORM=broadcom
ENV SC_ASIC=BCM56850
ENV SC_TARGET=saivs

RUN echo "deb [arch=amd64] http://debian-archive.trafficmanager.net/debian/ buster main contrib non-free" >> /etc/apt/sources.list && \
        echo "deb-src [arch=amd64] http://debian-archive.trafficmanager.net/debian/ buster main contrib non-free" >> /etc/apt/sources.list && \
        echo "deb [arch=amd64] http://debian-archive.trafficmanager.net/debian-security/ buster/updates main contrib non-free" >> /etc/apt/sources.list && \
        echo "deb-src [arch=amd64] http://debian-archive.trafficmanager.net/debian-security/ buster/updates main contrib non-free" >> /etc/apt/sources.list && \
        echo "deb [arch=amd64] http://debian-archive.trafficmanager.net/debian buster-backports main" >> /etc/apt/sources.list

## Make apt-get non-interactive
ENV DEBIAN_FRONTEND=noninteractive

# Install generic packages
RUN apt-get -o Acquire::Check-Valid-Until=false update && apt-get install -y \
        apt-utils \
        vim \
        curl \
        wget \
        iproute2 \
        unzip \
        git \
        procps \
        build-essential \
        graphviz \
        doxygen \
        aspell \
        python3-pip \
        rsyslog \
        supervisor \
        cmake \
        graphviz \
        doxygen \
        aspell \
        git \
        nlohmann-json-dev \
        python3-paramiko

RUN pip3 install redis

# Add support for supervisord to handle startup dependencies
RUN pip3 install supervisord-dependent-startup==1.4.0

RUN pip3 install ctypesgen
RUN apt-get install -y redis-server

# Install sonic-swss-common & sonic-sairedis building dependencies
RUN apt-get install -y \
        make libtool m4 autoconf dh-exec debhelper automake cmake pkg-config \
        libhiredis-dev libnl-3-dev libnl-genl-3-dev libnl-route-3-dev swig3.0 \
        libpython2.7-dev libgtest-dev libgmock-dev libboost-dev autoconf-archive

RUN apt-get install -y \
        libc-ares2 \
        libnl-3-dev libnl-genl-3-dev libnl-route-3-dev libnl-nf-3-dev libzmq3-dev \
        m4

RUN apt-get install -y \
      libtemplate-perl \
      libconst-fast-perl \
      libmoosex-aliases-perl \
      libnamespace-autoclean-perl \
      libgetopt-long-descriptive-perl \
      aspell-en \
      bison flex g++ libboost-all-dev libevent-dev libssl-dev

# Update Redis configuration:
# - Enable keyspace notifications as per sonic-swss-common/README.md
# - Do not daemonize redis-server since supervisord will manage it
# - Do not save Redis DB on disk
RUN sed -ri 's/^# unixsocket/unixsocket/' /etc/redis/redis.conf \
        && sed -ri 's/^unixsocketperm .../unixsocketperm 777/' /etc/redis/redis.conf \
        && sed -ri 's/redis-server.sock/redis.sock/' /etc/redis/redis.conf \
        && sed -ri 's/notify-keyspace-events ""/notify-keyspace-events AKE/' /etc/redis/redis.conf \
        && sed -ri 's/^daemonize yes/daemonize no/' /etc/redis/redis.conf \
        && sed -ri 's/^save/# save/' /etc/redis/redis.conf

# Disable kernel logging support
RUN sed -ri '/imklog/s/^/#/' /etc/rsyslog.conf

WORKDIR /sai

COPY sai.env /
RUN git clone --recursive https://github.com/sonic-net/sonic-swss-common \
        && cd sonic-swss-common \
        && . /sai.env \
        && git checkout ${SWSS_COMMON_ID} \
        && ./autogen.sh \
        && dpkg-buildpackage -us -uc -b --jobs=auto \
        && cd .. \
        && dpkg -i libswsscommon_1.0.0_amd64.deb \
        && dpkg -i libswsscommon-dev_1.0.0_amd64.deb \
        && rm -rf sonic-swss-common \
        && rm -f *swsscommon*

## Install Thrift saiserver
ENV platform=vs
ENV SAITHRIFTV2=y

## Install Thrift code gen
RUN wget "http://archive.apache.org/dist/thrift/0.11.0/thrift-0.11.0.tar.gz" \
    && tar -xf thrift-0.11.0.tar.gz \
    && cd thrift-0.11.0 \
    && ./bootstrap.sh \ 
    && ./configure --prefix=/usr --with-cpp --with-python \
    --with-qt4=no --with-qt5=no --with-csharp=no --with-java=no --with-erlang=no \
        --with-nodejs=no --with-lua=no --with-per=no --with-php=no --with-dart=no \
    --with-ruby=no --with-haskell=no --with-go=no --with-rs=no --with-haxe=no \
    --with-dotnetcore=no --with-d=no \
    && make && make install \
    && pip3 install lib/py

# Install SAI attributes metadata JSON generator
COPY scripts/gen_attr_list /sai/gen_attr_list
RUN apt-get install -y nlohmann-json-dev

# Install patch for SAI check
COPY patches/SAI/0001-improve-enum-values-integration-check-1727.patch /sai/

RUN git clone https://github.com/sonic-net/sonic-sairedis.git \
        && cd sonic-sairedis \
        && . /sai.env \
        && git checkout ${SAIREDIS_ID} \
        && git submodule update --init --recursive \
        && cd SAI && git fetch origin \
        && git checkout ${SAI_ID} \
        && git submodule update --init --recursive \
        && cd .. \
        && ./autogen.sh \
        && dpkg-buildpackage -us -uc -b --target=binary-syncd-vs --jobs=auto \
        && cd .. \
        && dpkg -i libsaivs_1.0.0_amd64.deb \
        && dpkg -i libsaivs-dev_1.0.0_amd64.deb \
        && dpkg -i libsaimetadata_1.0.0_amd64.deb \
        && dpkg -i libsaimetadata-dev_1.0.0_amd64.deb
RUN cp 0001-improve-enum-values-integration-check-1727.patch sonic-sairedis \
        && cd sonic-sairedis && patch -p1 < 0001-improve-enum-values-integration-check-1727.patch \
        && cd SAI && make saithrift-install \
        && cp meta/saimetadatautils.c /sai/gen_attr_list/ \
        && cp meta/saimetadata.c /sai/gen_attr_list/ \
        && cp meta/saiserialize.c /sai/gen_attr_list/ 

# Build SAI attributes metadata JSON generator and generate /etc/sai/sai.json
RUN cd /sai/gen_attr_list \
        && mkdir build && cd build \
        && cmake .. \
        && make -j$(nproc) \
        && mkdir -p /etc/sai \
        && ./attr_list_generator > /etc/sai/sai.json

# Setup supervisord
ENV SC_TARGET_PATH=npu/${SC_PLATFORM}/${SC_ASIC}/${SC_TARGET}
COPY ${SC_TARGET_PATH}/configs/sai.profile                 /etc/sai.d/sai.profile
COPY ${SC_TARGET_PATH}/configs/lanemap.ini                 /usr/share/sonic/hwsku/lanemap.ini
COPY ${SC_TARGET_PATH}/configs/port_config.ini             /usr/share/sonic/hwsku/port_config.ini
COPY ${SC_TARGET_PATH}/configs/supervisord.conf.saithrift  /etc/supervisor/conf.d/supervisord.conf
COPY scripts/veth-create.sh                                /usr/bin/veth-create.sh


RUN pip3 install scapy pysubnettree pytest


# Install SAI-C dependencies
RUN pip3 install pytest pytest_dependency pytest-html pdbpp macaddress click==8.0

# Install PTF dependencies
RUN pip3 install scapy dpkt

# Install ptf_nn_agent and PTF helpers (required by sai_dataplane.py)
COPY ptf/ptf_nn/ptf_nn_agent.py      /ptf/ptf_nn/ptf_nn_agent.py
COPY ptf/setup.py                    /ptf/setup.py
COPY ptf/README.md                   /ptf/README.md
COPY ptf/src/ptf/*.py                /ptf/src/ptf/
COPY ptf/src/ptf/platforms/*.py      /ptf/src/ptf/platforms/
COPY ptf/requirements.txt            /ptf/requirements.txt
RUN echo "#mock" > /ptf/ptf && pip3 install /ptf

# Deploy SAI Challenger
COPY common              /sai-challenger/common
COPY cli                 /sai-challenger/cli
COPY topologies          /sai-challenger/topologies
COPY setup.py            /sai-challenger/setup.py
COPY scripts/sai-cli-completion.sh   /sai-challenger/scripts/sai-cli-completion.sh
RUN echo ". /sai-challenger/scripts/sai-cli-completion.sh" >> /root/.bashrc

# Deploy a remote commands listener
COPY scripts/redis-cmd-listener.py   /sai-challenger/scripts/redis-cmd-listener.py

# Install SAI Challenger
RUN pip3 install /sai-challenger/common /sai-challenger


WORKDIR /sai-challenger

CMD ["/usr/bin/supervisord"]
