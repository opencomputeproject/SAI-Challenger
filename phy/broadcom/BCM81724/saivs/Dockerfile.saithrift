ARG BASE_OS
FROM sc-base:$BASE_OS

# Install generic packages
RUN apt-get install -y \
        libtemplate-perl \
        libconst-fast-perl \
        libmoosex-aliases-perl \
        libnamespace-autoclean-perl \
        libgetopt-long-descriptive-perl \
        aspell-en bison flex g++ \
        libboost-all-dev libevent-dev libssl-dev

WORKDIR /sai

ARG BASE_OS
RUN if [ "$BASE_OS" = "buster" ]; then \
        apt-get install -y thrift-compiler libthrift-dev libthrift-0.11.0 \
        && pip3 install ctypesgen thrift==0.11.0 ; \
    else \
        apt-get install -y pkg-config \
        && wget "http://archive.apache.org/dist/thrift/0.11.0/thrift-0.11.0.tar.gz" \
        && tar -xf thrift-0.11.0.tar.gz \
        && cd thrift-0.11.0 \
        && ./bootstrap.sh \
        && ./configure --prefix=/usr --with-cpp --with-python \
            --with-qt4=no --with-qt5=no --with-csharp=no --with-java=no --with-erlang=no \
            --with-nodejs=no --with-lua=no --with-per=no --with-php=no --with-dart=no \
            --with-ruby=no --with-haskell=no --with-go=no --with-rs=no --with-haxe=no \
            --with-dotnetcore=no --with-d=no \
        && make && make install \
        && pip3 install ctypesgen lib/py \
        && cd /sai \
        && rm -rf thrift-0.11.0 thrift-0.11.0.tar.gz ; \
    fi

ENV SAITHRIFTV2=y
ENV platform=vs

RUN git clone https://github.com/sonic-net/sonic-sairedis.git \
        && cd sonic-sairedis \
        && . /sai.env \
        && git checkout ${SAIREDIS_ID} \
        && git submodule update --init \
        && cd SAI && git fetch origin \
        && git checkout ${SAI_ID} \
        && sed -i '/#include <saitypes.h>/a #include <sai.h>' experimental/saiextensions.h \
        && sed -i '/#include <saitypes.h>/a #include <saiswitch.h>' experimental/saiswitchextensions.h \
        && cd .. \
        # Exclude sairedis tests that require Redis to be running
        && find . -type f -name Makefile.am | xargs sed -ri 's/^TESTS =/# TESTS =/' \
        && sed -i "s/^SUBDIRS = py2 py3/SUBDIRS = py3/" pyext/Makefile.am \
        && ./autogen.sh \
        && dpkg-buildpackage -us -uc -b -Psyncd,vs,nopython2 --jobs=auto \
        && cd .. \
        && dpkg -i libsaimetadata_1.0.0_amd64.deb \
        && dpkg -i libsaimetadata-dev_1.0.0_amd64.deb \
        && dpkg -i libsairedis_1.0.0_amd64.deb \
        && dpkg -i libsaivs_1.0.0_amd64.deb \
        && dpkg -i libsaivs-dev_1.0.0_amd64.deb \
        && dpkg -i syncd-vs_1.0.0_amd64.deb \
        && rm -f *.deb \
        && cd sonic-sairedis/SAI \
        && cp meta/saimetadatautils.c /sai/gen_attr_list/ \
        && cp meta/saimetadata.c /sai/gen_attr_list/ \
        && cp meta/saiserialize.c /sai/gen_attr_list/ \
        && GEN_SAIRPC_OPTS="-cve" make saithrift-install \
        && mv /sai/sonic-sairedis/tests /sai/ \
        && rm -rf /sai/sonic-sairedis/* \
        && mv /sai/tests /sai/sonic-sairedis/

# Build SAI attributes metadata JSON generator and generate /etc/sai/sai.json
RUN cd /sai/gen_attr_list \
        && mkdir build && cd build \
        && cmake .. \
        && make -j$(nproc) \
        && mkdir -p /etc/sai \
        && ./attr_list_generator > /etc/sai/sai.json.tmp \
        && python3 -mjson.tool /etc/sai/sai.json.tmp > /etc/sai/sai.json \
        && rm /etc/sai/sai.json.tmp

# Install PTF dependencies
RUN pip3 install pysubnettree

# Setup supervisord
COPY configs/sai.profile       /etc/sai.d/sai.profile
COPY configs/supervisord.conf.saithrift  /etc/supervisor/conf.d/supervisord.conf

WORKDIR /sai-challenger/tests

CMD ["/usr/bin/supervisord"]
